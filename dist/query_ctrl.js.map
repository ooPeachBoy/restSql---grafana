{"version":3,"sources":["../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","$q","scope","lastQueryError","panelCtrl","events","on","PanelEvents","dataReceived","onDataReceived","bind","dataError","onDataError","render","onDataRefresh","console","log","joinQueryList","updateProjection","target","tableSelect","formats","text","value","types","type","tableSegment","newSegment","table","selectionsParts","selectionAdd","newPlusButton","selectMenu","push","whereParts","whereAdd","aggParts","aggAdd","groupParts","groupAdd","sortParts","sortAdd","fieldParts","fieldAdd","limitSegment","limit","queryLimitSegment","queryLimit","query","key","includes","length","forEach","ele","index","splice","sqlPart","create","part","Array","isArray","element","i","tableName","parth","datasource","metricFindOption","then","result","status","data","tables","rows","segments","_","map","results","segment","expandable","dataList","err","message","options","Promise","resolve","parts","indexOf","updateRestSql","joinIndex","getOptions","express","params","resetPlusButton","event","name","when","action","removePart","item","newOperators","expIndex","selections","param","operators","where","aggs","groups","onAdd","export","exportAdd","getExportOptions","getAllFields","button","plusButton","html","queryObj","mainFields","exportFields","concat","aggFunc","field","join","select","from","parseInt","fields","operatorToSuffix","suffix","filter","JSON","parse","startsWith","endsWith","tmpStr","slice","isNaN","parseFloat","toLowerCase","reject","aggregation","group_by","joinQuery","sortExp","sort","stringify","refresh","QueryCtrl","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import './css/query-editor.css!'\r\n\r\nimport _ from 'lodash';\r\nimport { QueryCtrl } from 'app/plugins/sdk';\r\nimport sqlPart from './sql_part';\r\nimport { PanelEvents } from '@grafana/data';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\r\n  \r\n  constructor($scope, $injector, uiSegmentSrv, $q) {\r\n    super($scope, $injector);\r\n    this.scope = $scope;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n    this.$q = $q;\r\n    this.lastQueryError = null;\r\n    this.panelCtrl.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this), $scope);\r\n    this.panelCtrl.events.on(PanelEvents.dataError, this.onDataError.bind(this), $scope);\r\n    \r\n    this.panelCtrl.events.on(PanelEvents.render, this.onDataRefresh.bind(this), $scope)\r\n    console.log(this, '11111111111111111111');\r\n    this.joinQueryList = this.joinQueryList || [];\r\n    this.updateProjection()\r\n\r\n    this.target.tableSelect = this.target.tableSelect || [];\r\n\r\n    this.formats = [\r\n      { text: 'Time series', value: 'grafana.timeserie' },\r\n      { text: 'Table', value: 'grafana.table' },\r\n\r\n    ];\r\n    this.types = [\r\n      { text: 'Left Join', value: 'left_join' },\r\n      { text: 'Inner Join', value: 'inner_join' },\r\n      { text: 'Full Join', value: 'full_join' }\r\n    ];\r\n\r\n\r\n    // this.target.tableSegment = null;\r\n    this.target.target = this.target.target || '';\r\n    this.target.type = this.target.type || 'grafana.timeserie';\r\n\r\n    this.target.tableSegment = this.uiSegmentSrv.newSegment({ \"value\": this.target.table || 'select table', \"fake\": true });\r\n    this.target.table = this.target.table || this.target.tableSegment.value;\r\n\r\n    this.target.selectionsParts = this.target.selectionsParts || []\r\n    this.selectionAdd = this.uiSegmentSrv.newPlusButton();\r\n\r\n    this.selectMenu = [];\r\n    this.selectMenu.push(this.uiSegmentSrv.newSegment({ type: 'expression', value: 'Expression' }));\r\n    // this.selectionsParts = this.selectionsParts || [];\r\n    this.target.whereParts = this.target.whereParts || []\r\n    this.whereAdd = this.uiSegmentSrv.newPlusButton();\r\n    this.target.aggParts = this.target.aggParts || [];\r\n    this.aggAdd = this.uiSegmentSrv.newPlusButton();\r\n    this.target.groupParts = this.target.groupParts || []\r\n    this.groupAdd = this.uiSegmentSrv.newPlusButton();\r\n    this.target.joinQueryList = this.target.joinQueryList||[]\r\n    \r\n    this.target.sortParts = this.target.sortParts || [];\r\n    this.sortAdd = this.uiSegmentSrv.newPlusButton();\r\n    this.target.fieldParts = this.target.fieldParts || []\r\n    this.fieldAdd = this.uiSegmentSrv.newPlusButton();\r\n\r\n    this.target.limitSegment = this.uiSegmentSrv.newSegment({ \"value\": this.target.limit || '1000', \"fake\": true });\r\n    this.target.limit = this.target.limitSegment.value || '1000';\r\n    this.target.queryLimitSegment = this.uiSegmentSrv.newSegment({ \"value\": this.target.queryLimit || '1000', \"fake\": true });\r\n    this.target.queryLimit = this.target.queryLimitSegment.value || '1000';\r\n    this.target.query = {\r\n      // restSql协议结构定义\r\n      \"select\": {\r\n        \"from\": \"\",\r\n        \"filter\": {},\r\n        \"group_by\": [],\r\n        \"aggregation\": [],\r\n        \"sort\": [],\r\n      },\r\n      \"join\": [],\r\n      \"sort\": [],\r\n      \"fields\": [],\r\n      \"limit\": 200\r\n    };\r\n\r\n  }\r\n  updateProjection() {\r\n    if (this.target.target ) {\r\n      for (const key in this.target) {\r\n        if (key.includes('Parts')&&this.target[key].length>0) {\r\n          this.target[key].forEach((ele, index) => {\r\n            this.target[key].splice(index,1,sqlPart.create(ele.part))\r\n          })\r\n        } else if (key.includes('Segment')) {\r\n            this.target[key] = this.uiSegmentSrv.newSegment({ \"value\": this.target[key].value,\"fake\":true})\r\n        } else {\r\n          this.target.type = this.target.type\r\n        }\r\n      }\r\n      if (this.target.joinQueryList.length > 0) {\r\n        this.target.joinQueryList.forEach((ele, index) => {\r\n          for (const key in ele) {\r\n            if (Array.isArray(ele[key] && ele[key].length > 0)) {\r\n              ele[key].forEach((element, i) => {\r\n                ele[key].splice(i, 0, sqlPart.create(element.part))\r\n              })\r\n            } else if (key.includes('Add')) {\r\n              ele[key] = this.uiSegmentSrv.newPlusButton()\r\n            } else if (key == 'type') {\r\n              ele[key] = ele.type\r\n            } else if (key == 'table'||key=='limit') {\r\n              ele[key] = this.uiSegmentSrv.newSegment({ \"value\": ele[key].value, \"fake\": true })\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n   \r\n    \r\n  }\r\n  onDataRefresh() {\r\n    // console.log('数据重新加载了');\r\n  }\r\n  getTableSegments() {\r\n    let tableName = this.target.table;\r\n    let parth = 'getList';\r\n    this.datasource.metricFindOption(tableName, parth).then(result => {\r\n      if (result.status === 200) {\r\n        this.target.tableSelect = result.data.data.tables[0].rows;\r\n      }\r\n    })\r\n\r\n  }\r\n  transformToSegments() {\r\n    return (result) => {\r\n      const segments = _.map(results, segment => {\r\n        return this.uiSegmentSrv.newSegment({\r\n          value: segment.text,\r\n          expandable: segment.expandable,\r\n        });\r\n      });\r\n      return segments;\r\n    }\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    console.log(dataList);\r\n    this.lastQueryError = null\r\n  }\r\n  onDataError(err) {\r\n    if (this.target.target) {\r\n      this.lastQueryError = err.message\r\n    }\r\n\r\n  }\r\n\r\n  getOptions() {\r\n    const options = [];\r\n    options.push(this.uiSegmentSrv.newSegment({ type: 'expression', value: 'Expression' }));\r\n    console.log(\"tttttt getOptions\", options);\r\n    return Promise.resolve(options);\r\n  }\r\n\r\n  removePart(parts, part) {\r\n    const index = _.indexOf(parts, part);\r\n    parts.splice(index, 1);\r\n  }\r\n\r\n  onFormatChanged() {\r\n    console.log(\"onFormatChanged\", this);\r\n    this.updateRestSql();\r\n  }\r\n\r\n  onTableChanged() {\r\n    console.log(\"tableChanged\", this, this.target.tableSegment.value);\r\n    this.target.table = this.target.tableSegment.value;\r\n    let parth = 'getList';\r\n    this.datasource.metricFindOption(this.target.table, parth).then(result => {\r\n      if (result.status === 200) {\r\n        this.target.tableSelect = result.data.data.tables[0].rows;\r\n      }\r\n    })\r\n    this.updateRestSql();\r\n  }\r\n\r\n  onJoinTableChanged(joinIndex) {\r\n    console.log(\"onJoinTableChanged\", joinIndex);\r\n    // this.target.joinQueryList[joinIndex].table = ;\r\n    this.updateRestSql();\r\n  }\r\n\r\n  onLimitChanged() {\r\n    // console.log(\"onLimitChanged\");\r\n    this.target.limit = this.target.limitSegment.value;\r\n    this.updateRestSql();\r\n  }\r\n  onLimitQueryChanged() {\r\n    this.target.queryLimit = this.target.queryLimitSegment.value;\r\n    this.updateRestSql()\r\n  }\r\n  onLimitJoinChanged(joinIndex) {\r\n    this.target.joinQueryList[joinIndex].limit = this.uiSegmentSrv.newSegment({ \"value\": this.target.joinQueryList[joinIndex].limit.value || '1000', \"fake\": true });\r\n    this.updateRestSql()\r\n  }\r\n\r\n  addSelectionAction(part, index) {\r\n    console.log(1111, part, index);\r\n    this.getOptions()\r\n    const express = sqlPart.create({ type: 'column', params: ['column'] });\r\n    this.target.selectionsParts.push(express);\r\n    this.resetPlusButton(this.selectionAdd);\r\n  }\r\n\r\n  handleSelectionsPartEvent(part, index, event) {\r\n    console.log(\"tttttt handleSelectionsPartEvent\", event, index, part, '---');\r\n    // if (event.name = \"get-param-options\")\r\n    if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.removePart(this.target.selectionsParts, part);\r\n      // this.target.selectionsParts.splice(index, 1, null);\r\n      this.updateRestSql()\r\n      console.log(this.target.selectionsParts, '------')\r\n    } else if (event.name === \"part-param-changed\") {\r\n      console.log(this.target.selectionsParts);\r\n      this.target.selectionsParts.forEach((item, i) => {\r\n      })\r\n      this.updateRestSql();\r\n    } else if (event.name === \"get-param-options\") {\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(this.target.tableSelect));\r\n    }\r\n  }\r\n\r\n  addJoinSelectionAction(joinIndex, expIndex) {\r\n    console.log(\"addJoinSelectionAction\", joinIndex, expIndex);\r\n    const express = sqlPart.create({ type: 'column', params: ['column'] });\r\n    this.target.joinQueryList[joinIndex].selections.push(express)\r\n    this.resetPlusButton(this.target.joinQueryList[joinIndex].selectionAdd);\r\n  }\r\n\r\n  handleJoinSelectionsPartEvent(part, joinIndex, expIndex, event) {\r\n    console.log(\"handleJoinSelectionsPartEvent\", joinIndex, expIndex);\r\n    if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      // this.removePart(this.target.joinQueryList[joinIndex].selections, part);\r\n      this.target.joinQueryList[joinIndex].selections.splice(expIndex, 1);\r\n      this.updateRestSql()\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    }\r\n  }\r\n\r\n  addWhereAction(part, index) {\r\n    const express = sqlPart.create({ type: 'expression', params: ['column', '=', 'value'] });\r\n\r\n    this.target.whereParts.push(express);\r\n    this.resetPlusButton(this.whereAdd);\r\n  }\r\n\r\n\r\n  handleWherePartEvent(part, index, event) {\r\n    // console.log(\"handleWherePartEvent\", event);\r\n    if (event.name === \"get-param-options\" && event.param.name === \"op\") {\r\n      // 暂时只支持展开操作符列表\r\n      const operators = ['=', '<', '<=', '>', '>=', 'CONTAINS', 'STARTSWITH', 'ENDSWITH', 'RANGE', 'IN'];\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(operators));\r\n    } else if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.whereParts.splice(index, 1);\r\n      this.updateRestSql()\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  addJoinWhereAction(joinIndex, expIndex) {\r\n    const express = sqlPart.create({ type: 'expression', params: ['column', '=', 'value'] });\r\n    console.log(\"addWhereAction\", express);\r\n    this.target.joinQueryList[joinIndex].where.push(express);\r\n    this.resetPlusButton(this.target.joinQueryList[joinIndex].whereAdd);\r\n  }\r\n\r\n  handleJoinWherePartEvent(part, joinIndex, expIndex, event) {\r\n    console.log(\"handleJoinWherePartEvent\", event);\r\n    if (event.name === \"get-param-options\" && event.param.name === \"op\") {\r\n      // 暂时只支持展开操作符列表\r\n      const operators = ['=', '<', '<=', '>', '>=', 'CONTAINS', 'STARTSWITH', 'ENDSWITH', 'RANGE', 'IN'];\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(operators));\r\n    } else if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.joinQueryList[joinIndex].where.splice(expIndex, 1);\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  addAggAction() {\r\n    const express = sqlPart.create({ type: 'aggregate', params: ['avg', 'column'] });\r\n    console.log(\"addAggAction\", express);\r\n    this.target.aggParts.push(express);\r\n    this.resetPlusButton(this.aggAdd);\r\n  }\r\n\r\n  handleAggPartEvent(part, index, event) {\r\n    console.log(\"handleAggPartEvent\", event, part, index);\r\n    if (event.name === \"get-param-options\" && event.param.name === \"agg\") {\r\n      // 暂时只支持展开操作符列表\r\n      const operators = event.param.options;\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(operators));\r\n    } else if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.aggParts.splice(index, 1)\r\n      this.updateRestSql()\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  addJoinAggAction(joinIndex) {\r\n    const express = sqlPart.create({ type: 'aggregate', params: ['avg', 'column'] });\r\n    console.log(\"addJoinAggAction\", express);\r\n    this.target.joinQueryList[joinIndex].aggs.push(express);\r\n    this.resetPlusButton(this.target.joinQueryList[joinIndex].aggAdd);\r\n  }\r\n\r\n  handleJoinAggPartEvent(part, joinIndex, expIndex, event) {\r\n    console.log(\"handleJoinAggPartEvent\", event);\r\n    if (event.name === \"get-param-options\" && event.param.name === \"agg\") {\r\n      // 暂时只支持展开操作符列表\r\n      const operators = event.param.options;\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(operators));\r\n    } else if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.joinQueryList[joinIndex].aggs.splice(expIndex, 1);\r\n      this.updateRestSql()\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  addGroupAction() {\r\n    const express = sqlPart.create({ type: 'column', params: ['column'] });\r\n    console.log(\"addGroupsAction\", express);\r\n    this.target.groupParts.push(express);\r\n    this.resetPlusButton(this.groupAdd);\r\n  }\r\n\r\n  handleGroupPartEvent(part, index, event) {\r\n    console.log(\"handleGroupsPartEvent\");\r\n    if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.groupParts.splice(index, 1);\r\n      this.updateRestSql()\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    }\r\n  }\r\n\r\n  addJoinGroupAction(part, joinIndex, expIndex) {\r\n    const express = sqlPart.create({ type: 'column', params: ['column'] });\r\n    console.log(\"addGroupsAction\", express);\r\n    this.target.joinQueryList[joinIndex].groups.push(express);\r\n    this.resetPlusButton(this.target.joinQueryList[joinIndex].groupAdd);\r\n  }\r\n\r\n  handleJoinGroupPartEvent(part, joinIndex, expIndex, event) {\r\n    console.log(\"handleJoinGroupPartEvent\");\r\n    if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.joinQueryList[joinIndex].groups.splice(expIndex, 1);\r\n      this.updateRestSql();\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    }\r\n  }\r\n\r\n  addJoinOnAction(part, joinIndex, expIndex) {\r\n    const express = sqlPart.create({ type: 'on', params: ['field', 'field'] });\r\n    console.log(\"addJoinOnAction\", express);\r\n    this.target.joinQueryList[joinIndex].on.push(express);\r\n    this.resetPlusButton(this.target.joinQueryList[joinIndex].onAdd);\r\n  }\r\n\r\n  handleJoinOnPartEvent(part, joinIndex, expIndex, event) {\r\n    console.log(\"handleJoinOnPartEvent\", event);\r\n    if (event.name === \"get-param-options\" && event.param.name === \"op\") {\r\n      // 暂时只支持展开操作符列表\r\n      const operators = ['='];\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(operators));\r\n    } else if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.joinQueryList[joinIndex].on.splice(expIndex, 1);\r\n    } else if (event.name === \"get-param-options\" && event.param.name === \"field1\") {\r\n      // on field1=field2，field1是join的表中的字段，field2是原始表中的字段，这里做成可选项\r\n      console.log(\"handleJoinOnPartEvent\", this.target.joinQueryList[joinIndex]);\r\n      const options = [];\r\n      this.target.joinQueryList[joinIndex].selections.forEach((part) => {\r\n        options.push(part[\"params\"][0]);\r\n      });\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(options));\r\n    } else if (event.name === \"get-param-options\" && event.param.name === \"field2\") {\r\n      const options = [];\r\n      this.target.selectionsParts.forEach((part) => {\r\n        options.push(part[\"params\"][0]);\r\n      });\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(options));\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  addJoinExportAction(part, joinIndex, expIndex) {\r\n    const express = sqlPart.create({ type: 'alias', params: ['fields', 'alias'] });\r\n    console.log(\"addJoinOnAction\", express);\r\n    this.target.joinQueryList[joinIndex].export.push(express);\r\n    this.resetPlusButton(this.target.joinQueryList[joinIndex].exportAdd);\r\n  }\r\n  onJoinLimitChanged(joinIndex) {\r\n    this.target.joinQueryList[joinIndex].limit = this.target.joinQueryList[joinIndex].limit.value;\r\n    this.updateRestSql();\r\n  }\r\n\r\n  handleJoinExportPartEvent(part, joinIndex, expIndex, event) {\r\n    console.log(\"handleJoinExportPartEvent\", event);\r\n    if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      this.target.joinQueryList[joinIndex].export.splice(expIndex, 1);\r\n      this.updateRestSql();\r\n    } else if (event.name === \"get-param-options\" && event.param.name === \"field\") {\r\n      const options = this.getExportOptions(this.target.joinQueryList[joinIndex].selections, this.target.joinQueryList[joinIndex].aggs);\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(options));\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  addSortAction(index) {\r\n    const express = sqlPart.create({ type: 'sort', params: ['asc', 'field'] });\r\n    console.log(\"addSortAction\", index);\r\n    this.target.sortParts.push(express);\r\n    this.resetPlusButton(this.sortAdd);\r\n  }\r\n\r\n  handleSortPartEvent(part, index, event) {\r\n    console.log(\"handleSortPartEvent\", event);\r\n    if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n      // console.log(this.target.sortParts,'====');\r\n\r\n      this.target.sortParts.splice(index, 1);\r\n      this.updateRestSql();\r\n      // console.log(this.target.sortParts,'====');\r\n    } else if (event.name === \"get-param-options\" && event.param.name === \"field\") {\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(this.getAllFields()));\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  addFieldAction(index) {\r\n    const express = sqlPart.create({ type: 'alias', params: ['fields', 'alias'] });\r\n    console.log(\"addSortAction\", index, express);\r\n    this.target.fieldParts.push(express);\r\n    this.resetPlusButton(this.fieldAdd);\r\n  }\r\n\r\n  handleFieldPartEvent(part, index, event) {\r\n    // console.log(\"handleFieldPartEvent\", event);\r\n    if (event.name === \"get-part-actions\") {\r\n      return this.$q.when([{ text: 'Remove', value: 'remove' }]);\r\n    } else if (event.name === \"action\" && event.action.value === \"remove\") {\r\n\r\n      this.target.fieldParts.splice(index, 1);\r\n      this.updateRestSql();\r\n\r\n    } else if (event.name === \"get-param-options\") {\r\n      return Promise.resolve(this.uiSegmentSrv.newOperators(this.getAllFields()));\r\n    } else if (event.name === \"part-param-changed\") {\r\n      this.updateRestSql();\r\n    } else {\r\n      return Promise.resolve([]);\r\n    }\r\n  }\r\n\r\n  resetPlusButton(button) {\r\n    const plusButton = this.uiSegmentSrv.newPlusButton();\r\n    button.html = plusButton.html;\r\n    button.value = plusButton.value;\r\n  }\r\n\r\n  addJoin() {\r\n    const queryObj = {\r\n      type: \"left_join\",\r\n      table: this.uiSegmentSrv.newSegment({ \"value\": \"select table\", \"fake\": true }),\r\n      selections: [],\r\n      selectionAdd: this.uiSegmentSrv.newPlusButton(),\r\n      where: [],\r\n      whereAdd: this.uiSegmentSrv.newPlusButton(),\r\n      aggs: [],\r\n      aggAdd: this.uiSegmentSrv.newPlusButton(),\r\n      groups: [],\r\n      groupAdd: this.uiSegmentSrv.newPlusButton(),\r\n      on: [],\r\n      onAdd: this.uiSegmentSrv.newPlusButton(),\r\n      export: [],\r\n      exportAdd: this.uiSegmentSrv.newPlusButton(),\r\n      limit: this.uiSegmentSrv.newSegment({ \"value\": '1000', \"fake\": true }),\r\n    };\r\n    this.target.joinQueryList.push(queryObj);\r\n    console.log(\"addJoin\", this.target.joinQueryList);\r\n  }\r\n  delJoin(index) {\r\n    this.target.joinQueryList.splice(index, 1)\r\n  }\r\n\r\n  getAllFields() {\r\n    // 获取select的字段，aggregate的字段，以及所有join表中的export字段\r\n\r\n    const mainFields = this.getExportOptions(this.target.selectionsParts, this.target.aggParts);\r\n    const exportFields = []\r\n    this.target.joinQueryList.forEach((query) => {\r\n      console.log(\"fafadsf1\", query.export)\r\n      query.export.forEach((part) => {\r\n        console.log(\"fafadsf2\", part);\r\n        exportFields.push(part.params[1]) // todo: 重复元素保护\r\n      });\r\n    });\r\n    return mainFields.concat(exportFields)\r\n  }\r\n\r\n  getExportOptions(selections, aggs) {\r\n    // 获取select的字段和aggs的字段并格式化为restSql格式\r\n    const options = [];\r\n    selections.forEach((part) => {\r\n      // export已经select的字段\r\n      options.push(part[\"params\"][0]);\r\n    });\r\n    aggs.forEach((part) => {\r\n      // export已经aggregation的字段\r\n      console.log(\"handleJoinExportPartEvent\", part);\r\n      const [aggFunc, field] = part.params;\r\n      options.push([field, aggFunc].join(\"__\"));\r\n    });\r\n    return options;\r\n  }\r\n\r\n  updateRestSql() {\r\n    // 将输入的内容更新到target中去\r\n\r\n\r\n    this.target.query = {\r\n      // restSql协议结构定义\r\n      \"select\": {\r\n        \"from\": \"\",\r\n        \"fields\": [],\r\n        \"filter\": {},\r\n        \"group_by\": [],\r\n        \"aggregation\": [],\r\n        \"sort\": [],\r\n      },\r\n      \"join\": [],\r\n      \"sort\": [],\r\n      \"fields\": [],\r\n      \"limit\": 200\r\n    };\r\n\r\n    // udpate table\r\n    this.target.query.select.from = this.target.table;\r\n    // update queryLimit\r\n    this.target.query.select.limit = parseInt(this.target.queryLimit);\r\n\r\n    // update select fields\r\n    this.target.selectionsParts.forEach((part) => {\r\n      this.target.query.select.fields.push(part.params[0]);\r\n    });\r\n\r\n  \r\n\r\n    // update where\r\n    const operatorToSuffix = {\r\n      \"=\": \"\",\r\n      \"<\": \"__lt\",\r\n      \"<=\": \"__lte\",\r\n      \">\": \"__gt\",\r\n      \">=\": \"__gte\",\r\n      \"CONTAINS\": \"__contains\",\r\n      \"STARTSWITH\": \"__startswith\",\r\n      \"ENDSWITH\": \"__endswith\",\r\n      \"RANGE\": \"__range\",\r\n      \"IN\": \"__in\"\r\n    }\r\n    // [\"1\", \"=\", \"1\"]\r\n    this.target.whereParts.forEach((part) => {\r\n\r\n      const suffix = operatorToSuffix[part.params[1]];\r\n      const key = `${part.params[0]}${suffix}`\r\n      if (part.params[1] === \"IN\") {\r\n        console.log(\"whereTest\", part.params[2], typeof part.params[2]);\r\n        this.target.query.select.filter[key] = JSON.parse(part.params[2]);\r\n\r\n      } else {\r\n        if ((part.params[2].startsWith(\"\\\"\") && part.params[2].endsWith(\"\\\"\")) || (part.params[2].startsWith(\"\\'\") && part.params[2].endsWith(\"\\'\"))) {\r\n          const tmpStr = part.params[2]\r\n          this.target.query.select.filter[key] = tmpStr.slice(1, tmpStr.length - 1);\r\n          // console.log(this.target.query.select);\r\n        } else if (!isNaN(parseFloat(part.params[2]))) {\r\n          this.target.query.select.filter[key] = parseFloat(part.params[2]);\r\n          console.log(this.target.query.select);\r\n        }\r\n        else if (part.params[2].toLowerCase() === \"true\") {\r\n          this.target.query.select.filter[key] = true;\r\n        } else if (part.params[2].toLowerCase() === \"false\") {\r\n          this.target.query.select.filter[key] = false;\r\n        }\r\n        else {\r\n          return Promise.reject({\r\n            message: 'tetete',\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // update aggregation\r\n    // todo:agg func无法修改, 无法删除\r\n    this.target.aggParts.forEach((part) => {\r\n      console.log(\"aggParts\", part);\r\n      const [aggFunc, field] = part.params;\r\n      this.target.query.select.aggregation.push([field, aggFunc].join(\"__\"));\r\n    });\r\n\r\n    // update group by\r\n    this.target.groupParts.forEach((part) => {\r\n      console.log(\"groupParts\", part);\r\n      this.target.query.select.group_by.push(part.params[0]);\r\n    });\r\n\r\n    // update join\r\n    this.target.joinQueryList.forEach((query) => {\r\n      console.log(\"joinQueryList\", query);\r\n      const joinQuery = {};\r\n      // update join type\r\n      joinQuery.type = query.type;\r\n      joinQuery.query = { \"select\": {} };\r\n      console.log(\"joinQueryList\", query);\r\n      // update join table\r\n      joinQuery.query.select.from = query.table.value;\r\n      console.log(\"joinQueryList\", joinQuery.query.select.from);\r\n      // update join fields\r\n      joinQuery.query.select.fields = []\r\n      query.selections.forEach((part) => {\r\n        console.log(\"selections\", part);\r\n        joinQuery.query.select.fields.push(part.params[0]);\r\n      });\r\n      // udpate join filter\r\n      joinQuery.query.select.filter = {};\r\n      query.where.forEach((part) => {\r\n        const suffix = operatorToSuffix[part.params[1]];\r\n        const key = `${part.params[0]}${suffix}`;\r\n\r\n        if (part.params[1] === \"IN\") {\r\n          console.log(\"whereTest\", part.params[2], typeof part.params[2]);\r\n          joinQuery.query.select.filter[key] = JSON.parse(part.params[2]);\r\n        } else {\r\n          console.log(\"whereTest\", part.params[2]);\r\n          if ((part.params[2].startsWith(\"\\\"\") && part.params[2].endsWith(\"\\\"\")) || (part.params[2].startsWith(\"\\'\") && part.params[2].endsWith(\"\\'\"))) {\r\n            const tmpStr = part.params[2]\r\n            joinQuery.query.select.filter[key] = tmpStr.slice(1, tmpStr.length - 1);\r\n          } else if (!isNaN(parseFloat(part.params[2]))) {\r\n            joinQuery.query.select.filter[key] = parseFloat(part.params[2]);\r\n          } else {\r\n            return Promise.reject({\r\n              message: 'tetete',\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n        console.log(\"joinfilter\", key, joinQuery.query.select.filter);\r\n      })\r\n      // update aggregation \r\n      // todo:agg func无法修改\r\n      joinQuery.query.select.aggregation = [];\r\n      query.aggs.forEach((part) => {\r\n        console.log(\"join_aggregation\", part);\r\n        const [aggFunc, field] = part.params;\r\n        joinQuery.query.select.aggregation.push([field, aggFunc].join(\"__\"));\r\n      });\r\n      // update join group by\r\n      joinQuery.query.select.group_by = [];\r\n      query.groups.forEach((part) => {\r\n        // console.log(\"join_group\", part);\r\n        joinQuery.query.select.group_by.push(part.params[0]);\r\n      });\r\n      // update join on\r\n      joinQuery.on = {};\r\n      query.on.forEach((part) => {\r\n        joinQuery.on[part.params[0]] = part.params[1];\r\n      });\r\n      // updaate export\r\n      joinQuery.export = [];\r\n      query.export.forEach((part) => {\r\n        console.log(\"joinQuery\");\r\n        joinQuery.export.push(part.params.join(\"@\"));\r\n      });\r\n      // update joinLimit\r\n      joinQuery.limit = parseInt(query.limit.value);\r\n      this.target.query.join.push(joinQuery);\r\n    });\r\n\r\n    // update sort\r\n    this.target.sortParts.forEach((part) => {\r\n      console.log(\"sortParts\", part);\r\n      const sortExp = part.params[0] === \"asc\" ? part.params[1] : `-${part.params[1]}`;\r\n      this.target.query.sort.push(sortExp);\r\n    });\r\n\r\n    //update fields\r\n    this.target.fieldParts.forEach((part) => {\r\n      console.log(\"fieldParts\", part.params[0], '5555555555');\r\n      this.target.query.fields.push(part.params.join(\"@\"));\r\n    });\r\n\r\n    // update limit\r\n    this.target.query.limit = parseInt(this.target.limit);\r\n    // console.log(\"UpdateComplete\", this.target.query);\r\n    // this.datasource.metricFindQuery(this.target.query || '').then(this.panelCtrl.refresh());\r\n    // console.log(this.target, this.target.query);\r\n    this.target.target = JSON.stringify(this.target.query);\r\n    // this.target.target = this.target.query;\r\n\r\n    // console.log(this.target, this.target.query);\r\n\r\n    this.target.whereParts = this.target.whereParts;\r\n\r\n    console.log(\"UpdateComplete\", this);\r\n    // this.datasource.metricFindQuery(JSON.stringify(this.target.query) || '');\r\n    // this.datasource.query(this.target.query);\r\n    this.panelCtrl.refresh();\r\n\r\n  }\r\n}\r\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\r\n\r\n"]}