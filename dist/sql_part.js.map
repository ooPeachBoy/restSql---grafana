{"version":3,"sources":["../src/sql_part.js"],"names":["SqlPartDef","options","type","label","toUpperCase","substring","style","wrapOpen","wrapClose","separator","params","defaultParams","SqlPart","part","def","message","datatype","name","_","clone","strValue","index","optional","splice","createPart","register","dynamicLookup","create"],"mappings":"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","file":"sql_part.js","sourcesContent":["\nimport _ from 'lodash';\n\nclass SqlPartDef {\n  constructor(options) {\n    this.type = options.type;\n    if (options.label) {\n      this.label = options.label;\n    } else {\n      this.label = this.type[0].toUpperCase() + this.type.substring(1) + ':';\n    }\n    this.style = options.style;\n    if (this.style === 'function') {\n      this.wrapOpen = '(';\n      this.wrapClose = ')';\n      this.separator = ', ';\n    } else if (this.style === 'alias') {\n        this.separator = ' as ';\n    } else if (this.style === 'on') {\n        this.separator = ' = ';\n    } else if (this.style === 'aggregate') {\n      this.separator = ' (';\n      this.wrapClose = ')';\n    } else {\n      this.wrapOpen = ' ';\n      this.wrapClose = ' ';\n      this.separator = ' ';\n    } \n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n  }\n}\n\nclass SqlPart {\n  constructor(part, def) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      throw { message: 'Could not find sql part ' + part.type };\n    }\n\n    this.datatype = part.datatype;\n\n    if (part.name) {\n      this.name = part.name;\n      this.label = def.label + ' ' + part.name;\n    } else {\n      this.name = '';\n      this.label = def.label;\n    }\n\n    part.params = part.params || _.clone(this.def.defaultParams);\n    this.params = part.params;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n  }\n}\n\n\nconst index = [];\n\nfunction createPart(part) {\n  // console.log(\"createPartHAHA\", part);\n  const def = index[part.type];\n  if (!def) {\n    return null;\n  }\n\n  return new SqlPart(part, def);\n}\n\nfunction register(options) {\n  index[options.type] = new SqlPartDef(options);\n}\n\nregister({\n  type: 'column',\n  style: 'label',\n//   params: [{ type: 'column', dynamicLookup: true }],\n  params: [{ type: 'string', dynamicLookup: true }],\n  defaultParams: ['value'],\n});\n\nregister({\n  type: 'expression',\n  style: 'expression',\n  label: 'Expr:',\n  params: [\n    { name: 'left', type: 'string', dynamicLookup: true },\n    { name: 'op', type: 'string', dynamicLookup: true },\n    { name: 'right', type: 'string', dynamicLookup: true },\n  ],\n  defaultParams: ['value1', '>', 'value2'],\n});\n\nregister({\n  type: 'macro',\n  style: 'label',\n  label: 'Macro:',\n  params: [],\n  defaultParams: [],\n});\n\nregister({\n  type: 'aggregate',\n  style: 'label',\n  label: 'Agg:',\n  params: [\n    {\n      name: 'agg',\n      type: 'string',\n      options: ['avg', 'sum', 'count', 'count_distinct'],\n      dynamicLookup: true\n    },\n    { name: 'column', type: 'string', dynamicLookup: true }\n  ],\n  defaultParams: ['avg', 'column'],\n});\n\nregister({\n  type: 'alias',\n  style: 'alias',\n  params: [\n      { name: 'field', type: 'string',  dynamicLookup: true },\n      { name: 'alias', type: 'string',  dynamicLookup: true }\n  ],\n  defaultParams: ['alias'],\n});\n\nregister({\n    type: 'on',\n    style: 'on',\n    params: [\n        { name: 'field1', type: 'string',  dynamicLookup: true },\n        { name: 'field2', type: 'string',  dynamicLookup: true }\n    ],\n  });\n\nregister({\ntype: 'sort',\nstyle: 'sort',\nlabel: 'Order by:',\nparams: [\n    { name: 'sort', type: 'string',  options: ['asc', 'desc'], dynamicLookup: true },\n    { name: 'field', type: 'string',  dynamicLookup: true }\n],\n});\n  \n\n\n\nexport default {\n  create: createPart,\n};\n"]}