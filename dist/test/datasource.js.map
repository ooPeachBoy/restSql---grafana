{"version":3,"sources":["../../src/datasource.js"],"names":["GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","console","log","type","url","name","q","withCredentials","headers","basicAuth","length","options","query","buildQueryParameters","targets","when","data","queryStr","target","formatStr","doRequest","encodeURI","replace","method","then","response","status","message","title","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","result","interpolated","mapToTextValue","tableName","parth","datasourceRequest","_","map","d","i","text","value","isObject","filter","queryRow","scopedVars","JSON","parse","select","aggregation","filterAggregation","join","forEach","element","stringify","refId","hide","array","varables","variables","push","ele","current","index","startsWith","field","split","splice","Promise","resolve","reject"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nexport class GenericDatasource {\r\n\r\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\r\n    console.log('3333333', this);\r\n    // console.log(\"instanceSettings\", instanceSettings);\r\n    this.type = instanceSettings.type;\r\n    this.url = instanceSettings.url;\r\n    this.name = instanceSettings.name;\r\n    this.q = $q;\r\n    this.backendSrv = backendSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.withCredentials = instanceSettings.withCredentials;\r\n    this.headers = {'Content-Type': 'application/json'};\r\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\r\n      this.headers['Authorization'] = instanceSettings.basicAuth;\r\n    }\r\n  }\r\n\r\n  query(options) {\r\n    console.log(options,'😋', '😀😡🐷');\r\n  \r\n    // console.log(\"query222333Options\", options,'1234567');\r\n    var query = this.buildQueryParameters(options);\r\n    // query.targets = query.targets.filter(t => !t.hide)\r\n    // console.log(\"query222333Query\", this.url);\r\n\r\n    if(options.targets.length <= 0) {\r\n      return this.q.when({data: []});\r\n    }\r\n\r\n    // if (query.targets.length <= 0) {\r\n    //   return this.q.when({data: []});\r\n    // }\r\n\r\n    // if (this.templateSrv.getAdhocFilters) {\r\n    //   query.adhocFilters = this.templateSrv.getAdhocFilters(this.name);\r\n    // } else {\r\n    //   query.adhocFilters = [];\r\n    // }\r\n    // return this.doRequest({\r\n    //   url: this.url + '/query',\r\n    //   data: query,\r\n    //   method: 'POST'\r\n    // });\r\n    const queryStr = `?query=${options.targets[0].target}`;\r\n    const formatStr = `&datatype=${options.targets[0].type}`;\r\n    \r\n    return this.doRequest({\r\n      url: encodeURI(this.url + `/query/${queryStr}${formatStr}`).replace(/\\+/g, '%2B'),\r\n      method: 'GET'\r\n    })\r\n  }\r\n\r\n  testDatasource() {\r\n    return this.doRequest({\r\n      url: this.url + '/',\r\n      method: 'GET',\r\n    }).then(response => {\r\n      if (response.status === 200) {\r\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\r\n      }\r\n    });\r\n  }\r\n\r\n  annotationQuery(options) {\r\n    console.log('444444444444');\r\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\r\n    var annotationQuery = {\r\n      range: options.range,\r\n      annotation: {\r\n        name: options.annotation.name,\r\n        datasource: options.annotation.datasource,\r\n        enable: options.annotation.enable,\r\n        iconColor: options.annotation.iconColor,\r\n        query: query\r\n      },\r\n      rangeRaw: options.rangeRaw\r\n    };\r\n\r\n    return this.doRequest({\r\n      url: this.url + '/annotations',\r\n      method: 'POST',\r\n      data: annotationQuery\r\n    }).then(result => {\r\n      return result.data;\r\n    });\r\n  }\r\n\r\n  metricFindQuery(query) {\r\n    console.log(\"metricFindQuery\", query, this.url);\r\n    var interpolated = {\r\n        target: this.templateSrv.replace(query, null, 'regex')\r\n    };\r\n    console.log(\"metricFindQuery\", interpolated);\r\n    return this.doRequest({\r\n      // url: this.url + '/search',\r\n      url: \"http://mock.studyinghome.com/mock/5e74382b8c3c6c22c4271aea/example_copy/gitpid\",\r\n      data: interpolated,\r\n      method: 'POST',\r\n    }).then(this.mapToTextValue);\r\n  }\r\n// 下拉选项\r\n  metricFindOption(tableName,parth) {\r\n    const data = {\r\n      tableName\r\n    }\r\n    return this.backendSrv\r\n      .datasourceRequest({\r\n        // url: '/api/tsdb/query',\r\n        url:'http://mock.studyinghome.com/mock/5e74382b8c3c6c22c4271aea/example_copy/'+parth,\r\n        method: 'POST',\r\n        data\r\n      })\r\n      .then((result) => {return result});\r\n  }\r\n\r\n\r\n  mapToTextValue(result) {\r\n    console.log(result,'🙃');\r\n    return _.map(result.data, (d, i) => {\r\n      if (d && d.text && d.value) {\r\n        return { text: d.text, value: d.value };\r\n      } else if (_.isObject(d)) {\r\n        return { text: d, value: i};\r\n      }\r\n      return { text: d, value: d };\r\n    });\r\n  }\r\n\r\n  doRequest(options) {\r\n    console.log('2222222', options);\r\n    options.withCredentials = this.withCredentials;\r\n    options.headers = this.headers;\r\n\r\n    return this.backendSrv.datasourceRequest(options);\r\n  }\r\n\r\n  buildQueryParameters(options) {\r\n    console.log('111111111', options);\r\n    options.targets = _.filter(options.targets, target => {\r\n      return target.target !== 'select metric';\r\n    });\r\n\r\n    var targets = _.map(options.targets, target => {\r\n      const queryRow = this.templateSrv.replace(target.target, options.scopedVars, 'regex');\r\n      \r\n    \r\n      \r\n      var query = JSON.parse(queryRow);\r\n      if (query.select.aggregation.length > 0) {\r\n        this.filterAggregation(query.select.aggregation )\r\n      }\r\n     \r\n      query.join.forEach(element => {\r\n        if (element.query.select.aggregation.length > 0) {\r\n          this.filterAggregation(element.query.select.aggregation )\r\n        }\r\n      });\r\n\r\n     \r\n      console.log(query, '111');\r\n\r\n      return {\r\n        target: JSON.stringify(query),\r\n        refId: target.refId,\r\n        hide: target.hide,\r\n        type: target.type || 'timeserie'\r\n      };\r\n    });\r\n\r\n    options.targets = targets;\r\n\r\n    return options;\r\n  }\r\n  filterAggregation(array) {\r\n    const varables = []\r\n    this.templateSrv.variables.forEach(ele => {\r\n      varables.push({\r\n        name: '$' + ele.name,\r\n        value: ele.current.value\r\n      })\r\n    });\r\n    varables.forEach(element => {\r\n      if (array.length > 0) {\r\n        array.forEach((ele, index) => {\r\n          console.log(ele.startsWith(element.name), '222');\r\n          if (ele.startsWith(element.name)) {\r\n            var field = ele.split('__')\r\n            field[0] = \"(\" + element.value.join(',') + \")\"\r\n            array.splice(index, 1, [field[0], field[1]].join('__'))\r\n          }\r\n        })\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  getTagKeys(options) {\r\n    return new Promise((resolve, reject) => {\r\n      this.doRequest({\r\n        url: this.url + '/tag-keys',\r\n        method: 'POST',\r\n        data: options\r\n      }).then(result => {\r\n        return resolve(result.data);\r\n      });\r\n    });\r\n  }\r\n\r\n  getTagValues(options) {\r\n    return new Promise((resolve, reject) => {\r\n      this.doRequest({\r\n        url: this.url + '/tag-values',\r\n        method: 'POST',\r\n        data: options\r\n      }).then(result => {\r\n        return resolve(result.data);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n"]}